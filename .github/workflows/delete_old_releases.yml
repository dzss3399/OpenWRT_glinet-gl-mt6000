name: Delete Old Items

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    # Führe den Workflow einmal wöchentlich aus
    - cron: '0 0 * * 0'

jobs:
  maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get All Releases
        id: all_releases
        run: |
          all_releases=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -X GET "https://api.github.com/repos/${{ github.repository }}/releases" \
              | jq -r '[ .[] | {id: .id, created_at: .created_at} ] | sort_by(.created_at) | .[-5:]')
          # Speichere die letzten fünf Release-IDs in eine Datei
          printf '%s\n' "${all_releases[@]}" | jq -r '.[] | .id' > releases_to_keep.txt

      - name: Delete Old Releases
        id: delete_old_releases
        run: |
          all_releases=$(cat releases_to_keep.txt)
          for release_id in $all_releases; do
            echo "Behalte Release: $release_id"
          done
      
      - name: Get All Workflows
        id: all_workflows
        run: |
          all_workflows=$(ls -t .github/workflows)
          # Behalte nur die letzten fünf Workflows
          printf '%s\n' "${all_workflows[@]}" | tail -n +6 > workflows_to_delete.txt

      - name: Delete Old Workflows
        id: delete_old_workflows
        run: |
          while read -r workflow; do
            rm .github/workflows/"$workflow"
            echo "Workflow $workflow gelöscht"
          done < workflows_to_delete.txt

      - name: Get All Workflow Runs
        id: all_workflow_runs
        run: |
          all_runs=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -X GET "https://api.github.com/repos/${{ github.repository }}/actions/runs" \
              | jq -r '[ .workflow_runs | .[] | {id: .id, created_at: .created_at} ] | sort_by(.created_at) | .[-5:]')
          # Speichere die letzten fünf Run-IDs in eine Datei
          printf '%s\n' "${all_runs[@]}" | jq -r '.[] | .id' > runs_to_keep.txt

      - name: Delete Old Workflow Runs
        id: delete_old_runs
        run: |
          all_runs=$(cat runs_to_keep.txt)
          for run_id in $all_runs; do
            echo "Behalte Workflow Run: $run_id"
          done

      - name: Get All Tags
        id: all_tags
        run: |
          all_tags=$(git tag --sort=-creatordate | head -n 5)
          # Speichere die letzten fünf Tags in eine Datei
          printf '%s\n' "${all_tags[@]}" > tags_to_keep.txt

      - name: Delete Old Tags
        id: delete_old_tags
        run: |
          while read -r tag_name; do
            git push --delete origin "$tag_name"
            git tag --delete "$tag_name"
            echo "Tag $tag_name gelöscht"
          done < tags_to_keep.txt
